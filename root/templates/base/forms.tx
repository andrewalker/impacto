: cascade base::wrapper {
:    page_type  => 'form',
: }
:
: macro required -> $req {
:   $req ? 'true' : 'false'
: }
:
: macro begin_field -> ($field_name, $field_type) {
    <div id="<: $field_name :>_div" class="fieldline <: $field_type :> <: $field_name :>">
: }
:
: macro label -> ($field_name, $field_type, $required) {
    <label class="<: $field_type :>_label" for="<: $form_name :>_<: $field_name :>_input">
:       _label($field_name)
        <span class='required_<: $required :>'>*</span>
    </label>
: }
:
: macro _label -> ($field_name) {
:   $i18n.maketext("crud." ~ $form_name ~ "." ~ $field_name)
: }
:
: macro end_field -> {
    </div>
: }
:
: block content -> {
<div id="<: $form_name :>_form_div" class="form_container <: $form_name :>_form_container">
    <div
        data-dojo-type="dijit.form.Form"
        action="<: $form_action // '' :>"
        method="<: $form_method // 'post' :>"
        id="<: $form_name :>_form"
        data-dojo-id="<: $form_name :>_form"
        class="form <: $form_name :>_form"
        accept-charset="utf-8"
        <: if $is_upload_form { 'enctype="multipart/form-data"' } :>
    >
    <script type="dojo/on" data-dojo-event="submit">
        if (!this.validate()) {
            smoke.alert('O formulário contém erros.');
            return false;
        }
        return true;
    </script>
:       form()
:       trigger_field()
    </div></div>
: }
:
: macro datetime_field -> ($field_name, $required) {
: begin_field($field_name, 'datetime')
: label($field_name, 'datetime', $required)
<input
    type="text"
    id="<: $form_name :>_<: $field_name :>_input"
    class="datetime_input <: $field_name :>_input"
    name="<: $field_name :>"
    data-dojo-type="dijit.form.DateTextBox"
    data-dojo-props="required: <: $required :>"
    value="<: $values[$field_name] :>"
/>
: end_field()
: }
:
: macro file_field -> ($field_name, $required) {
: begin_field($field_name, 'file')
: label($field_name, 'file', $required)
<input
    type="file"
    id="<: $form_name :>_<: $field_name :>_input"
    class="file_input <: $field_name :>_input"
    name="<: $field_name :>"
/>
: end_field()
: }
:
: macro hidden_field -> ($field_name) {
<input
    type="hidden"
    id="<: $form_name :>_<: $field_name :>_hidden_input"
    class="<: $field_name :>_input"
    name="<: $field_name :>"
    value="<: $values[$field_name] :>"
/>
: }
:
: macro htmltext_field -> ($field_name) {
: begin_field($field_name, 'htmltext')
: label($field_name, 'htmltext', $required)
<div class="htmltext_input <: $field_name :>_input">
    <div data-dojo-type="dijit.Editor"
        id="<: $form_name :>_<: $field_name :>_editor"
        data-dojo-props="onChange: function () {  dojo.byId('<: $form_name :>_<: $field_name :>_input').value = this.getValue() }"
    ><: $values[$field_name] | raw :></div>
    <input type="hidden" name="<: $field_name :>" id="<: $form_name :>_<: $field_name :>_input" value="<: $values[$field_name] :>" />
</div>
: end_field()
: }
:
: macro longtext_field -> ($field_name, $required) {
: begin_field($field_name, 'longtext')
: label($field_name, 'longtext', $required)
<textarea
    id="<: $form_name :>_<: $field_name :>_input"
    class="longtext_input <: $field_name :>_input"
    name="<: $field_name :>"
    data-dojo-type="dijit.form.Textarea"
    data-dojo-props="required: <: $required :>"
    ><: $values[$field_name] :></textarea>
: end_field()
: }
:
: macro money_field -> ($field_name, $required) {
: begin_field($field_name, 'money')
: label($field_name, 'money', $required)
<input
    type="text"
    id="<: $form_name :>_<: $field_name :>_input"
    class="money_input <: $field_name :>_input"
    name="<: $field_name :>"
    value="<: $values[$field_name] :>"
    data-dojo-type="dijit.form.CurrencyTextBox"
    data-dojo-props="
        required: <: $required :>,
        constraints: { fractional: true },
        currency: 'R$',
" />
: end_field()
: }
:
: macro number_field -> ($field_name, $required) {
: begin_field($field_name, 'number')
: label($field_name, 'number', $required)
<input
    type="text"
    id="<: $form_name :>_<: $field_name :>_input"
    class="<: $field_type :>_input <: $field_name :>_input"
    name="<: $field_name :>"
    value="<: $values[$field_name] :>"
    data-dojo-type="dijit.form.NumberTextBox"
    data-dojo-props="required: <: $required :>"
/>
: end_field()
: }
:
: macro password_field -> ($field_name, $required) {
: begin_field($field_name, 'password')
: label($field_name, 'password', $required)
<input
    type="password"
    id="<: $form_name :>_<: $field_name :>_input"
    class="password_input <: $field_name :>_input"
    name="<: $field_name :>"
    data-dojo-type="dijit.form.ValidationTextBox"
    data-dojo-props="required: <: $required :>"
/>
: end_field()
: }
:
: macro text_field -> ($field_name, $required) {
: begin_field($field_name, 'text')
: label($field_name, 'text', $required)
<input
    type="text"
    id="<: $form_name :>_<: $field_name :>_input"
    class="text_input <: $field_name :>_input"
    name="<: $field_name :>"
    value="<: $values[$field_name] :>"
    data-dojo-type="dijit.form.ValidationTextBox"
    data-dojo-props="required: <: $required :>"
/>
: end_field()
: }
:
: macro toggle_field -> ($field_name) {
: begin_field($field_name, 'toggle')
: label($field_name, 'toggle', 'false')
<input
    type="checkbox"
    id="<: $form_name :>_<: $field_name :>_input"
    class="toggle_input <: $field_name :>_input"
    name="<: $field_name :>"
    data-dojo-type="dijit.form.CheckBox"
    value="1"
<:   if ($values[$field_name] && $values[$field_name] != 'false') { :>
        checked="yes"
<:   } :>
/>
: end_field()
: }
:
: macro trigger_field -> {
: begin_field('submit', 'trigger')
<button
    type="submit"
    id="<: $form_name :>_submit_input"
    class="trigger_input submit_input"
    name="submit"
    value="submit"
    data-dojo-type="dijit.form.Button">
:   _label('submit')
</button>
: end_field()
: }
:
: macro combobox_field -> ($field_name, $options, $required) {
: begin_field($field_name, 'combobox')
: label($field_name, 'combobox', $required)
    <select
        name="<: $field_name :>"
        id="<: $form_name :>_<: $field_name :>_input"
        class="select_input <: $field_name :>_input"
        data-dojo-type="dijit.form.FilteringSelect"
        data-dojo-props="required: <: $required :>"
    >
:       for $options -> $option {
           <option value="<: $option.value :>" <: if $values[$field_name] == $option.value { :>selected="selected"<: } :>><: $option.name :></option>
:       }
    </select>
: end_field()
: }
: macro combobox_factory_field -> ($field_name, $required) {
:   combobox_field($field_name, $factories[$field_name][0].get_options, $required)
: }
: macro checkboxes_field -> ($field_name, $options) {
: begin_field($field_name, 'checkbox')
: label($field_name, 'checkbox', $required)
<div class="checkboxes">
: my $v = $values[$field_name]
: for $options -> $option {
        <div class="checkbox <: $field_name :>_checkbox">
            <label class="checkbox_name">
                <input type="checkbox" name="<: $field_name :>" value="<: $option.value :>" <: _selected($option.value, $v) :> data-dojo-type="dijit.form.CheckBox">
                <: $option.name :>
            </label>
        </div>
: }
</div>
: }
:
: macro checkboxes_factory_field -> ($field_name) {
:   checkboxes_field($field_name, $factories[$field_name][0].get_options)
: }
:
: macro _selected -> ($option_value, $field_value) {
:   for $field_value -> $fv {
:      if $fv == $option_value {
checked="checked"
:      }
:   }
: }
: macro zip_code_field -> ($field_name, $required) {
:   text_field($field_name, $required)
: }
: macro phone_field -> ($field_name, $required) {
:   text_field($field_name, $required)
: }
: macro email_field -> ($field_name, $required) {
:   text_field($field_name, $required)
: }
: macro uri_field -> ($field_name, $required) {
:   text_field($field_name, $required)
: }
: macro country_field -> ($field_name, $required) {
: begin_field($field_name, 'text')
: label($field_name, 'text', $required)
<input
    type="text"
    id="<: $form_name :>_<: $field_name :>_input"
    class="text_input <: $field_name :>_input"
    name="<: $field_name :>"
    value="<: $values[$field_name] // 'Brasil' :>"
    data-dojo-type="dijit.form.ValidationTextBox"
    data-dojo-props="required: <: $required :>"
/>
: end_field()
: }
